//
//  TaskListInteractorProtocol.swift
//  UniversalMultimedia_MOY
//
//  Created by –ù–∏–∫–æ–ª–∞–π –ì—Ä–∏–Ω—å–∫–æ on 31.01.2025.

import Foundation

protocol TaskListInteractorProtocol {
    func loadTasks()
    func deleteTask(_ task: TaskEntity)
    func updateTask(_ task: TaskEntity)
}

class TaskListInteractor: TaskListInteractorProtocol {
    var presenter: TaskListPresenterProtocol?
    let apiService = APIService()
    let coreDataService = CoreDataService()
    
    
    func loadTasks() {
        print("üì° Interactor: –∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ CoreData...")
        
        var localTasks = CoreDataService.shared.fetchTasks() // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ CoreData
        print("‚úÖ –ò–∑ CoreData –∑–∞–≥—Ä—É–∂–µ–Ω–æ: \(localTasks.count) –∑–∞–¥–∞—á")
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º API-–¥–∞–Ω–Ω—ã–µ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
        apiService.fetchTasks { result in
            switch result {
            case .success(let apiTasks):
                print("‚úÖ –ò–∑ API –∑–∞–≥—Ä—É–∂–µ–Ω–æ: \(apiTasks.count) –∑–∞–¥–∞—á")
                
                // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–µ—Å–ª–∏ —Ç–∞–∫–∞—è –∑–∞–¥–∞—á–∞ —É–∂–µ –µ—Å—Ç—å –≤ CoreData)
                let apiTasksFiltered = apiTasks.filter { apiTask in
                    !localTasks.contains { $0.id == apiTask.id }
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º API-–¥–∞–Ω–Ω—ã–µ –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º
                localTasks.append(contentsOf: apiTasksFiltered)
                
                DispatchQueue.main.async {
                    self.presenter?.didLoadTasks(localTasks)
                }
                
            case .failure(let error):
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ API: \(error.localizedDescription)")
                
                // –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                DispatchQueue.main.async {
                    self.presenter?.didLoadTasks(localTasks)
                }
            }
        }
    }
    
    func deleteTask(_ task: TaskEntity) {
        coreDataService.deleteTask(task)
        loadTasks() // üî• –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
    }
    
    func updateTask(_ task: TaskEntity) {
        CoreDataService.shared.updateTask(task) // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CoreData
        loadTasks() // ‚úÖ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        
    }
}
